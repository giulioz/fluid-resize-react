{"version":3,"file":"index.es.js","sources":["../src/FixedWidth.js","../src/FixedHeight.js","../src/FixedSize.js"],"sourcesContent":["import React from 'react';\n\nclass FixedWidth extends React.Component {\n  static defaultProps = {\n    maxSteps: 10,\n    min: 5,\n    max: 100\n  };\n\n  state = {\n    upperBound: this.props.max,\n    lowerBound: this.props.min,\n    current: (this.props.max + this.props.min) / 2,\n    steps: 0\n  };\n\n  outer = React.createRef();\n  inner = React.createRef();\n\n  componentDidMount() {\n    this.update();\n  }\n\n  componentDidUpdate() {\n    this.update();\n  }\n\n  update() {\n    const outerRect = this.outer.current.getBoundingClientRect();\n    const innerRect = this.inner.current.getBoundingClientRect();\n\n    if (this.state.steps < this.props.maxSteps) {\n      if (outerRect.width > innerRect.width) {\n        this.setState(({ lowerBound, upperBound, current, steps }) => ({\n          lowerBound: current,\n          upperBound: upperBound,\n          steps: steps + 1\n        }));\n        this.setState(({ lowerBound, upperBound }) => ({\n          current: (upperBound + lowerBound) / 2\n        }));\n      } else if (outerRect.width < innerRect.width) {\n        this.setState(({ lowerBound, upperBound, current, steps }) => ({\n          lowerBound: lowerBound,\n          upperBound: current,\n          steps: steps + 1\n        }));\n        this.setState(({ lowerBound, upperBound }) => ({\n          current: (upperBound + lowerBound) / 2\n        }));\n      }\n    }\n  }\n\n  render() {\n    const { children, ...rest } = this.props;\n\n    return (\n      <div ref={this.outer} {...rest}>\n        <div style={{ display: 'inline-block' }} ref={this.inner}>\n          {this.props.children(this.state.current)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FixedWidth;\n","import React from 'react';\n\nclass FixedHeight extends React.Component {\n  static defaultProps = {\n    maxSteps: 10,\n    min: 5,\n    max: 100\n  };\n\n  state = {\n    upperBound: this.props.max,\n    lowerBound: this.props.min,\n    current: (this.props.max + this.props.min) / 2,\n    steps: 0\n  };\n\n  outer = React.createRef();\n  inner = React.createRef();\n\n  componentDidMount() {\n    this.update();\n  }\n\n  componentDidUpdate() {\n    this.update();\n  }\n\n  update() {\n    const outerRect = this.outer.current.getBoundingClientRect();\n    const innerRect = this.inner.current.getBoundingClientRect();\n\n    if (this.state.steps < this.props.maxSteps) {\n      if (outerRect.height > innerRect.height) {\n        this.setState(({ lowerBound, upperBound, current, steps }) => ({\n          lowerBound: current,\n          upperBound: upperBound,\n          steps: steps + 1\n        }));\n        this.setState(({ lowerBound, upperBound }) => ({\n          current: (upperBound + lowerBound) / 2\n        }));\n      } else if (outerRect.height < innerRect.height) {\n        this.setState(({ lowerBound, upperBound, current, steps }) => ({\n          lowerBound: lowerBound,\n          upperBound: current,\n          steps: steps + 1\n        }));\n        this.setState(({ lowerBound, upperBound }) => ({\n          current: (upperBound + lowerBound) / 2\n        }));\n      }\n    }\n  }\n\n  render() {\n    const { children, ...rest } = this.props;\n\n    return (\n      <div ref={this.outer} {...rest}>\n        <div style={{ display: 'inline-block' }} ref={this.inner}>\n          {this.props.children(this.state.current)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FixedHeight;\n","import React from 'react';\n\nclass FixedSize extends React.Component {\n  static defaultProps = {\n    maxSteps: 10,\n    min: 5,\n    max: 100\n  };\n\n  state = {\n    upperBound: this.props.max,\n    lowerBound: this.props.min,\n    current: (this.props.max + this.props.min) / 2,\n    steps: 0\n  };\n\n  outer = React.createRef();\n  inner = React.createRef();\n\n  componentDidMount() {\n    this.update();\n  }\n\n  componentDidUpdate() {\n    this.update();\n  }\n\n  update() {\n    const outerRect = this.outer.current.getBoundingClientRect();\n    const innerRect = this.inner.current.getBoundingClientRect();\n\n    if (this.state.steps < this.props.maxSteps) {\n      if (\n        outerRect.width > innerRect.width &&\n        outerRect.height > innerRect.height\n      ) {\n        this.setState(({ lowerBound, upperBound, current, steps }) => ({\n          lowerBound: current,\n          upperBound: upperBound,\n          steps: steps + 1\n        }));\n        this.setState(({ lowerBound, upperBound }) => ({\n          current: (upperBound + lowerBound) / 2\n        }));\n      } else if (\n        outerRect.width < innerRect.width ||\n        outerRect.height < innerRect.height\n      ) {\n        this.setState(({ lowerBound, upperBound, current, steps }) => ({\n          lowerBound: lowerBound,\n          upperBound: current,\n          steps: steps + 1\n        }));\n        this.setState(({ lowerBound, upperBound }) => ({\n          current: (upperBound + lowerBound) / 2\n        }));\n      }\n    }\n  }\n\n  render() {\n    const { children, ...rest } = this.props;\n\n    return (\n      <div ref={this.outer} {...rest}>\n        <div style={{ display: 'inline-block' }} ref={this.inner}>\n          {this.props.children(this.state.current)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FixedSize;\n"],"names":["FixedWidth","state","props","max","min","outer","React","createRef","inner","update","outerRect","current","getBoundingClientRect","innerRect","steps","maxSteps","width","setState","lowerBound","upperBound","children","rest","display","Component","defaultProps","FixedHeight","height","FixedSize"],"mappings":"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"}